{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/person.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","setFilter","value","onChange","event","target","PersonForm","props","setNewName","newName","setNewNumber","newNumber","type","onClick","addPerson","Person","person","name","number","Persons","persons","removePerson","includes","map","id","baseUrl","axios","get","then","response","data","post","delete","put","Notification","message","notificationStyle","color","SUCCESS","ERROR","NEUTRAL","className","style","App","useState","setPersons","setMessage","messageType","setMessageType","useEffect","PersonServices","console","log","notify","content","setTimeout","preventDefault","newPerson","window","confirm","forEach","ret","concat","catch","err","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b07f2047.chunk.js","sourcesContent":["const Filter = ({filter, setFilter}) => {\r\n  return (\r\n  <div>\r\n    Filter - shown with name\r\n    <input value={filter} onChange={(event) => setFilter(event.target.value)}></input>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Filter","const PersonForm = (props) => {\r\n  return (\r\n      <form>\r\n      <div>\r\n        name:\r\n        <input onChange={(event) => props.setNewName(event.target.value)} value={props.newName} />\r\n      </div>\r\n      <div>\r\n          number: \r\n          <input onChange={(event) => props.setNewNumber(event.target.value)} value={props.newNumber} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" onClick={props.addPerson}>add</button>\r\n      </div>\r\n    </form>\r\n\r\n  )\r\n}\r\n\r\nexport default PersonForm","const Person = ({person}) => {\r\n  return (\r\n      <div key={person.name}>\r\n        {person.name}: {person.number} \r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Person","import Person from './Person'\r\n\r\nconst Persons = ({persons, filter, removePerson}) => {\r\n  return persons\r\n    .filter(({name}) => name.includes(filter))\r\n    .map((person) => (\r\n      <div key={person.name}>\r\n        <Person person={person} removePerson={removePerson}/>\r\n        <button onClick={() => removePerson(person.id)}>Delete</button>\r\n      </div>\r\n    ))\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = person => {\r\n  const request = axios.post(baseUrl, person)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request\r\n}\r\n\r\nconst update = (id, person) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, person)\r\n  return request\r\n}\r\n\r\nexport default { \r\n  getAll, create, remove, update\r\n}","const Notification = ({message, type}) => {\r\n  const colorCode = {\r\n    SUCCESS: 'green',\r\n    ERROR: 'red',\r\n    NEUTRAL: 'black'\r\n  }\r\n  const notificationStyle = {\r\n    color: colorCode[type]\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\" style={notificationStyle}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport PersonServices from './services/person'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ filter, setFilter ] = useState('')\r\n  const [ message, setMessage ] = useState(null)\r\n  const [ messageType, setMessageType ] = useState('NEUTRAL')\r\n\r\n  useEffect(() => {\r\n    PersonServices\r\n      .getAll()\r\n      .then(data => {\r\n        setPersons(data)\r\n        console.log('fetched persons: ', data);\r\n      })\r\n  }, [])\r\n\r\n  const notify = (content, type) => {\r\n    setMessage(content)\r\n    setMessageType(type)\r\n    \r\n    setTimeout(() => {\r\n      setMessage(null)\r\n      setMessageType('NEUTRAL')\r\n    }, 5000);\r\n  }\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    const newPerson = {name: newName, number: newNumber}\r\n    if (persons.map((person) => person.name).includes(newName)) {\r\n      if (window.confirm(`${newName} is already in the list, do you want to modify this person?`)) {\r\n        let id\r\n        persons.forEach(person => {\r\n          if (person.name === newName) {\r\n            id = person.id\r\n          }\r\n        })\r\n        PersonServices\r\n          .update(id, {...newPerson, id})\r\n          .then(response => {\r\n            notify('Updated successfully', 'SUCCESS')\r\n            setPersons(persons.map(person => (person.id === id ? response.data : person)))\r\n          })\r\n      }\r\n      \r\n    } else {\r\n      PersonServices\r\n        .create(newPerson)\r\n        .then(ret => {\r\n          setPersons(persons.concat(ret))\r\n          notify('Added successfully', 'SUCCESS')\r\n        })\r\n        .catch((err) => {console.log(err);})\r\n    }\r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  const removePerson = (id) => {\r\n    if (window.confirm(\"Do you really want to delete this person?\")) {\r\n      PersonServices\r\n        .remove(id)\r\n        .then(ret => {\r\n          setPersons(persons.filter(person => person.id !== id))\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          notify('This person is deleted in the server. Please reload this page.', 'ERROR')\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} type={messageType} />\r\n      <Filter filter={filter} setFilter={setFilter}/>\r\n      <h2>Add a new person</h2>\r\n      <PersonForm newName={newName} setNewName={setNewName} newNumber={newNumber} setNewNumber={setNewNumber} addPerson={addPerson} />\r\n      <h2>Numbers</h2>\r\n      <Persons persons={persons} filter={filter} removePerson={removePerson}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, \r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}